
services:
  db:
    image: postgres:15
    container_name: postgres_db_lms
    restart: unless-stopped
    env_file:
      - ./api/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker_lms
    restart: unless-stopped
    # WAJIB: jangan pakai user 'guest' (dibatasi hanya localhost).
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-appuser}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-apppass}
    ports:
      - "5673:5672"    # AMQP (broker Celery & Channels)
      - "15673:15672"  # RabbitMQ Management UI
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_running"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./api
    container_name: django_backend_lms
    # Pakai ASGI server (Uvicorn) untuk WebSocket/real-time
    command: uvicorn eduforge.asgi:application --host 0.0.0.0 --port 8000 --workers 3
    restart: unless-stopped
    volumes:
      - ./api:/app
    env_file:
      - ./api/.env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8000:8000"

  celery:
    build: ./api
    container_name: celery_worker
    command: celery -A eduforge worker -l info
    restart: unless-stopped
    volumes:
      - ./api:/app
    env_file:
      - ./api/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  celery-beat:
    build: ./api
    container_name: celery_beat
    command: celery -A eduforge beat -l info
    restart: unless-stopped
    volumes:
      - ./api:/app
    env_file:
      - ./api/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  frontend:
    build: ./front-end
    container_name: react_frontend_lms
    command: npm run dev
    restart: unless-stopped
    volumes:
      - ./front-end:/app
      - /app/node_modules
    env_file:
      - ./front-end/.env
    ports:
      - "5173:5173"

volumes:
  postgres_data:
